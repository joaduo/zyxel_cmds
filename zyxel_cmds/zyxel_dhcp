#!/bin/bash
# Copyright (c) 2021, Joaquin G. Duo
# Code Licensed under LGPL License. See LICENSE file.

if [[ $@ == *--help* ]] ; then
  echo "
Print DHCP table for Zyxel Router

  $(basename $0)
  
  --help  print this help
  "
  exit 0
fi

if [[ $ZYXEL_ROUTER_PASSWD == "" ]] ; then
  echo "ERROR: no ZYXEL_ROUTER_PASSWD env var defined"
  exit 1
fi

SCRIPT='
set timeout 5

spawn telnet 192.168.2.1

expect "Password:"
send -- "'"$ZYXEL_ROUTER_PASSWD"'"

expect "Menu\[21;38HSelection\[21;48HNumber:"
send -- "24\r"

expect "8.\[12;30HCommand\[12;38HInterpreter\[12;50HMode"
expect "Menu\[21;38HSelection\[21;48HNumber:"
send -- "8\r"

expect "Speedy>"

send -- "ip dhcp enif0 status\r"
expect "   7"
send -- "\r"

expect "Speedy>"

send -- "ip arp status\r"

expect "Speedy>"

send -- "exit\r"

expect "Menu\[21;38HSelection\[21;48HNumber:"
send -- "99\r"
'

OUT=/tmp/expect.stdout.tmp
ERR=/tmp/expect.stderr.tmp

run_expect(){
    expect <(echo "$SCRIPT") > $OUT 2> $ERR
}

run_expect

if grep "spawn id exp4 not open" $ERR > /dev/null ; then
  run_expect
fi

cat $OUT | tr -d '\000-\010\013\014\016-\037' | grep "DHCP on iface" -A 1000 -B 1 | grep "num of arp entries" -B 1000  | \
grep -v  UNCERTAIN | head -n 50 | sed -r  's/^7+//' | sed 's/Speedy> 7/Speedy> /' | grep "Speedy>" --color -A 1000 -B 1000

rm $OUT $ERR

